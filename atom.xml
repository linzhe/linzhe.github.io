<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LinZhe&#39;s Notes</title>
  <subtitle>Work notes</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.linzhe.me/"/>
  <updated>2018-07-12T12:14:46.611Z</updated>
  <id>http://www.linzhe.me/</id>
  
  <author>
    <name>Zhe Lin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【EOS源码阅读】1.EOS源码编译运行</title>
    <link href="http://www.linzhe.me/2018/07/12/20180712-eos-0-eos-compile/"/>
    <id>http://www.linzhe.me/2018/07/12/20180712-eos-0-eos-compile/</id>
    <published>2018-07-12T10:14:33.000Z</published>
    <updated>2018-07-12T12:14:46.611Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;EOS是当下最火的区块链技术，被社会广泛看好为下一代区块链3.0。&lt;br&gt;和以太坊不同，EOS的主语言是C++，最近开始关注区块链相关的技术，接下来的学习将从EOS源码开始着手一步步的展开。&lt;/p&gt;
&lt;h1 id=&quot;EOS&quot;&gt;&lt;a href=&quot;#EOS&quot; class=&quot;headerlink&quot; title=&quot;EOS&quot;&gt;&lt;/a&gt;EOS&lt;/h1&gt;&lt;p&gt;EOS，可以理解为Enterprise Operation System，即为商用分布式应用设计的一款区块链操作系统。&lt;br&gt;EOS是引入的一种新的区块链架构，旨在实现分布式应用的性能扩展。&lt;/p&gt;
&lt;p&gt;EOS是BM设计的，BM是与小神童齐名的天才，只是人比较低调，较少人知道，整个EOS项目，BM只负责技术，商业方面是由BLOCK.ONE团队运作的。&lt;br&gt;EOS是针对区块链存在的扩容困难、交易费高昂、不能跨链连接、公链不适合企业使用等问题进行设计的。&lt;/p&gt;
&lt;p&gt;EOS最近发布了EOS.IO DAWN 2.0，同时也发布了一个公开的测试网络，大家也可以开始体验EOS的各种功能。&lt;/p&gt;
&lt;h1 id=&quot;编译环境&quot;&gt;&lt;a href=&quot;#编译环境&quot; class=&quot;headerlink&quot; title=&quot;编译环境&quot;&gt;&lt;/a&gt;编译环境&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Mac OS &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;版本 10.13.4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8 GB 1867 MHz DDR3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在编译前，需要将硬盘整理出20G空间，编译要求7G内存以及最少20G空间，主要是安装的各种依赖会比较多，而且比较占用磁盘空间。&lt;/p&gt;
&lt;h1 id=&quot;构建源码&quot;&gt;&lt;a href=&quot;#构建源码&quot; class=&quot;headerlink&quot; title=&quot;构建源码&quot;&gt;&lt;/a&gt;构建源码&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git clone https://github.com/EOSIO/eos --recursive&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cd eos &amp;amp;&amp;amp; ./eosio_build.sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;错误处理集合&quot;&gt;&lt;a href=&quot;#错误处理集合&quot; class=&quot;headerlink&quot; title=&quot;错误处理集合&quot;&gt;&lt;/a&gt;错误处理集合&lt;/h1&gt;&lt;h2 id=&quot;LLVM没有安装&quot;&gt;&lt;a href=&quot;#LLVM没有安装&quot; class=&quot;headerlink&quot; title=&quot;LLVM没有安装&quot;&gt;&lt;/a&gt;LLVM没有安装&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Could not find a package configuration file provided by &amp;quot;LLVM&amp;quot; (requested&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  version 4.0) with any of the following names:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    LLVMConfig.cmake&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    llvm-config.cmake&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  Add the installation prefix of &amp;quot;LLVM&amp;quot; to CMAKE_PREFIX_PATH or set&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;LLVM_DIR&amp;quot; to a directory containing one of the above files.  If &amp;quot;LLVM&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  provides a separate development package or SDK, be sure it has been&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  installed.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;处理方案：&lt;br&gt;使用brew安装llvm&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew install llvm@4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 按实际安装目录export, 选择4.0.x的版本&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;export export LLVM_DIR=/usr/local/opt/llvm@4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;cmake版本过低&quot;&gt;&lt;a href=&quot;#cmake版本过低&quot; class=&quot;headerlink&quot; title=&quot;cmake版本过低&quot;&gt;&lt;/a&gt;cmake版本过低&lt;/h2&gt;&lt;p&gt;处理方案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew upgrade cmake&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;brew link cmake&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;编译完成&quot;&gt;&lt;a href=&quot;#编译完成&quot; class=&quot;headerlink&quot; title=&quot;编译完成&quot;&gt;&lt;/a&gt;编译完成&lt;/h1&gt;&lt;p&gt;源码中的的eosio_build.sh脚本可以一键安装，但是构建时间较长，&lt;br&gt;中途还会出现各种依赖安装错误，可能还需要输入sudo密码。&lt;br&gt;最终构建成功的页面如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; _______  _______  _______ _________ _______&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(  ____ \(  ___  )(  ____ \\__   __/(  ___  )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;| (    \/| (   ) || (    \/   ) (   | (   ) |&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;| (__    | |   | || (_____    | |   | |   | |&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|  __)   | |   | |(_____  )   | |   | |   | |&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;| (      | |   | |      ) |   | |   | |   | |&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;| (____/\| (___) |/\____) |___) (___| (___) |&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(_______/(_______)\_______)\_______/(_______)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOSIO has been successfully built. 00:32:59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;To verify your installation run the following commands:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/usr/local/bin/mongod -f /usr/local/etc/mongod.conf &amp;amp;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cd /Users/linzhe/blockchain/eos/build; make test&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;For more information:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOSIO website: https://eos.io&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOSIO Telegram channel @ https://t.me/EOSProject&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOSIO resources: https://eos.io/resources/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOSIO Stack Exchange: https://eosio.stackexchange.com&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOSIO wiki: https://github.com/EOSIO/eos/wiki&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;EOS是当下最火的区块链技术，被社会广泛看好为下一代区块链3.0。&lt;br&gt;和以太坊不同，EOS的主语言是C++，最近开始关注区块链相关的技术
    
    </summary>
    
      <category term="区块链" scheme="http://www.linzhe.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="区块链" scheme="http://www.linzhe.me/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="EOS" scheme="http://www.linzhe.me/tags/EOS/"/>
    
  </entry>
  
  <entry>
    <title>Python Tips</title>
    <link href="http://www.linzhe.me/2017/11/24/20171124-python-tips/"/>
    <id>http://www.linzhe.me/2017/11/24/20171124-python-tips/</id>
    <published>2017-11-24T11:06:58.000Z</published>
    <updated>2017-11-24T11:23:31.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Python-Tips&quot;&gt;&lt;a href=&quot;#Python-Tips&quot; class=&quot;headerlink&quot; title=&quot;Python Tips&quot;&gt;&lt;/a&gt;Python Tips&lt;/h1&gt;&lt;h2 id=&quot;Python-的函数参数传递&quot;&gt;&lt;a href=&quot;#Python-的函数参数传递&quot; class=&quot;headerlink&quot; title=&quot;Python 的函数参数传递&quot;&gt;&lt;/a&gt;Python 的函数参数传递&lt;/h2&gt;&lt;p&gt;Python中有可变对象（比如列表List）和不可变对象（比如字符串），所以在参数传递时分为两种情况：&lt;br&gt;对于不可变对象作为函数参数，相当于C系语言的值传递；&lt;br&gt;对于可变对象作为函数参数，相当于C系语言的引用传递。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;num = &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;n = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;change&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(num, n)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    num[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    n = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; num&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; n&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如例子中的参数，num会被修改，而n则不会被值成1&lt;br&gt;假如需要对可变对象进行计算，不修改原有值，可以使用copy方法，如果参数内容仍然是可变参数时，则需要使用deepcopy方法&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; copy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;num = &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;change&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(num)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    num_copy = num&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    num_copy[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;change_copy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(num)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    num_copy = copy.deepcopy(num)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    num_copy[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;change_copy(num)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; num&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;change(num)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; num&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python-Tips&quot;&gt;&lt;a href=&quot;#Python-Tips&quot; class=&quot;headerlink&quot; title=&quot;Python Tips&quot;&gt;&lt;/a&gt;Python Tips&lt;/h1&gt;&lt;h2 id=&quot;Python-的函数参数传递&quot;&gt;&lt;a href=&quot;#Pyt
    
    </summary>
    
      <category term="Python" scheme="http://www.linzhe.me/categories/Python/"/>
    
    
      <category term="Python" scheme="http://www.linzhe.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>401. Binary Watch</title>
    <link href="http://www.linzhe.me/2017/05/25/20170525-backtracking-401/"/>
    <id>http://www.linzhe.me/2017/05/25/20170525-backtracking-401/</id>
    <published>2017-05-25T14:26:58.000Z</published>
    <updated>2017-05-25T15:16:09.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;401-Binary-Watch&quot;&gt;&lt;a href=&quot;#401-Binary-Watch&quot; class=&quot;headerlink&quot; title=&quot;401. Binary Watch&quot;&gt;&lt;/a&gt;401. Binary Watch&lt;/h1&gt;&lt;h2 id=&quot;使用backtracking的方法&quot;&gt;&lt;a href=&quot;#使用backtracking的方法&quot; class=&quot;headerlink&quot; title=&quot;使用backtracking的方法&quot;&gt;&lt;/a&gt;使用backtracking的方法&lt;/h2&gt;&lt;p&gt;穷举所有的可能，注意hour &amp;lt; 12, minute &amp;lt; 60&lt;br&gt;递归实现,退出条件是当num为0时，生成相应的时间。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; hour = &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; minute = &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt; readBinaryWatch(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt; res;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        helper(res, make_pair(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), num, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;helper&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt;&amp;amp; res, pair&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; time, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; start_point)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (num == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; time_str = to_string(time.first) +  (time.second &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; ?  &lt;span class=&quot;string&quot;&gt;&quot;:0&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;:&quot;&lt;/span&gt;) + to_string(time.second);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            res.push_back(time_str);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = start_point; i &amp;lt; hour.size() + minute.size(); ++i) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;lt; hour.size()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                time.first += hour[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (time.first &amp;lt; &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    helper(res, time, num - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                time.first -= hour[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                time.second += minute[i - hour.size()];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (time.second &amp;lt; &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    helper(res, time, num - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                time.second -= minute[i - hour.size()];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;401-Binary-Watch&quot;&gt;&lt;a href=&quot;#401-Binary-Watch&quot; class=&quot;headerlink&quot; title=&quot;401. Binary Watch&quot;&gt;&lt;/a&gt;401. Binary Watch&lt;/h1&gt;&lt;h2 id=&quot;使用backt
    
    </summary>
    
      <category term="leetcode" scheme="http://www.linzhe.me/categories/leetcode/"/>
    
    
      <category term="backtracking" scheme="http://www.linzhe.me/tags/backtracking/"/>
    
  </entry>
  
  <entry>
    <title>c中指针的巧妙使用</title>
    <link href="http://www.linzhe.me/2017/04/19/20170419-cpp-pointer-solution/"/>
    <id>http://www.linzhe.me/2017/04/19/20170419-cpp-pointer-solution/</id>
    <published>2017-04-19T14:28:58.000Z</published>
    <updated>2017-04-19T14:41:31.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;19-Remove-Nth-Node-From-End-of-List&quot;&gt;&lt;a href=&quot;#19-Remove-Nth-Node-From-End-of-List&quot; class=&quot;headerlink&quot; title=&quot;19. Remove Nth Node From End of List&quot;&gt;&lt;/a&gt;19. Remove Nth Node From End of List&lt;/h1&gt;&lt;p&gt;题目中要求从一个链表中删除倒数第n个节点，主要考查两个方面的知识，双指针与链表删除操作。&lt;br&gt;比较巧妙的是指针的指针last的使用，很值得学习，顺便复习一下指针的知识。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * Definition for singly-linked list.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * struct ListNode &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *     int val;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *     ListNode *next;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *     ListNode(int x) : val(x), next(NULL) &amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;ListNode* &lt;span class=&quot;title&quot;&gt;removeNthFromEnd&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ListNode* head, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!head) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; head;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ListNode* prev = head;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ListNode** last = &amp;amp;head;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;n; ++i) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            prev = prev-&amp;gt;next;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (prev-&amp;gt;next != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            prev = prev-&amp;gt;next;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            last = &amp;amp;((*last)-&amp;gt;next);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        *last = (*last)-&amp;gt;next;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; head;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;19-Remove-Nth-Node-From-End-of-List&quot;&gt;&lt;a href=&quot;#19-Remove-Nth-Node-From-End-of-List&quot; class=&quot;headerlink&quot; title=&quot;19. Remove Nth Node Fr
    
    </summary>
    
      <category term="leetcode" scheme="http://www.linzhe.me/categories/leetcode/"/>
    
    
      <category term="指针" scheme="http://www.linzhe.me/tags/%E6%8C%87%E9%92%88/"/>
    
      <category term="链表" scheme="http://www.linzhe.me/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>word2vec系列：入门基础</title>
    <link href="http://www.linzhe.me/2016/12/18/20161218-word2vec_page_1/"/>
    <id>http://www.linzhe.me/2016/12/18/20161218-word2vec_page_1/</id>
    <published>2016-12-18T04:37:52.000Z</published>
    <updated>2017-04-19T14:42:31.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;快速入门&quot;&gt;&lt;a href=&quot;#快速入门&quot; class=&quot;headerlink&quot; title=&quot;快速入门&quot;&gt;&lt;/a&gt;快速入门&lt;/h1&gt;&lt;p&gt;1、从&lt;a href=&quot;http://word2vec.googlecode.com/svn/trunk/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://word2vec.googlecode.com/svn/trunk/&lt;/a&gt; 下载所有相关代码：&lt;br&gt;一种方式是使用svn Checkout，可加代理进行check。&lt;br&gt;另一种就是export to github，然后再github上下载，我选择第二种方式下载。&lt;/p&gt;
&lt;p&gt;2、运行make编译word2vec工具：（如果其中makefile文件后有.txt后缀，将其去掉）在当前目录下执行make进行编译，生成可执行文件(编译过程中报出很出Warning，暂且不管)；&lt;/p&gt;
&lt;p&gt;3、运行示例脚本：./demo-word.sh 看一下./demo-word.sh的内容，大致执行了3步操作&lt;/p&gt;
&lt;p&gt;从&lt;a href=&quot;http://mattmahoney.net/dc/text8.zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mattmahoney.net/dc/text8.zip&lt;/a&gt; 下载了一个文件text8 ( 一个解压后不到100M的txt文件，可自己下载并解压放到同级目录下)；&lt;br&gt;使用文件text8进行训练，训练过程比较长；&lt;br&gt;执行word2vec生成词向量到 vectors.bin文件中，（速度比较快，几分钟的事情）&lt;br&gt;在demo-word.sh中有如下命令&lt;/p&gt;
&lt;p&gt;运行结果如图：&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;快速入门&quot;&gt;&lt;a href=&quot;#快速入门&quot; class=&quot;headerlink&quot; title=&quot;快速入门&quot;&gt;&lt;/a&gt;快速入门&lt;/h1&gt;&lt;p&gt;1、从&lt;a href=&quot;http://word2vec.googlecode.com/svn/trunk/&quot; target=
    
    </summary>
    
      <category term="深度学习" scheme="http://www.linzhe.me/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="word2vec" scheme="http://www.linzhe.me/tags/word2vec/"/>
    
  </entry>
  
  <entry>
    <title>安装配置mysql</title>
    <link href="http://www.linzhe.me/2016/12/15/20161215-install-and-setting-mysql-sever/"/>
    <id>http://www.linzhe.me/2016/12/15/20161215-install-and-setting-mysql-sever/</id>
    <published>2016-12-15T02:05:16.000Z</published>
    <updated>2016-12-18T04:34:47.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;0-安装mysql&quot;&gt;&lt;a href=&quot;#0-安装mysql&quot; class=&quot;headerlink&quot; title=&quot;0 安装mysql&quot;&gt;&lt;/a&gt;0 安装mysql&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo yum install -y mysql-server mysql mysql-devel&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;service mysqld start&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;过程比较简单，可以直接mysq server启动了，如果需要修改mysql数据的存放目录，可以修改my.conf文件里相应的配置。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# 查看my.conf位置&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mysql --help | grep my.cnf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;vi /your/path/my.conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;修改datadir等相应的内容，重启server&lt;/p&gt;
&lt;h1 id=&quot;账号设置&quot;&gt;&lt;a href=&quot;#账号设置&quot; class=&quot;headerlink&quot; title=&quot;账号设置&quot;&gt;&lt;/a&gt;账号设置&lt;/h1&gt;&lt;p&gt;mysql数据库安装完以后只会有一个root管理员账号，但是此时的root账号还并没有为其设置密码，需要设置。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/usr/bin/mysqladmin -u root password &amp;apos;new-password&amp;apos;　　// 为root账号设置密码&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;添加账号并授权&quot;&gt;&lt;a href=&quot;#添加账号并授权&quot; class=&quot;headerlink&quot; title=&quot;添加账号并授权&quot;&gt;&lt;/a&gt;添加账号并授权&lt;/h2&gt;&lt;p&gt;添加一个test账号，并授权&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;CREATE USER test IDENTIFIED BY PASSWORD(&amp;apos;password&amp;apos;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;GRANT ALL PRIVILEGES ON *.* TO &amp;apos;test&amp;apos;@&amp;apos;%&amp;apos;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;FLUSH PRIVILEGES;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;忘记root密码&quot;&gt;&lt;a href=&quot;#忘记root密码&quot; class=&quot;headerlink&quot; title=&quot;忘记root密码&quot;&gt;&lt;/a&gt;忘记root密码&lt;/h2&gt;&lt;p&gt;root密码是管理整个mysql数据库的入口，所以忘记时需要找回。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;#杀掉进程 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;killall -TERM mysqld。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#启动 MySQL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;bin/safe_mysqld --skip-grant-tables &amp;amp;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就可以不需要密码进行mysql&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;gt;use mysql&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;gt;update user set password=password(&amp;quot;new_pass&amp;quot;) where user=&amp;quot;root&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;gt;flush privileges;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0-安装mysql&quot;&gt;&lt;a href=&quot;#0-安装mysql&quot; class=&quot;headerlink&quot; title=&quot;0 安装mysql&quot;&gt;&lt;/a&gt;0 安装mysql&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
    
    </summary>
    
      <category term="note" scheme="http://www.linzhe.me/categories/note/"/>
    
    
      <category term="mysql" scheme="http://www.linzhe.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>centos6安装tensoflow</title>
    <link href="http://www.linzhe.me/2016/12/05/20161205-centos6-install-tensoflow/"/>
    <id>http://www.linzhe.me/2016/12/05/20161205-centos6-install-tensoflow/</id>
    <published>2016-12-05T12:48:57.000Z</published>
    <updated>2016-12-05T14:12:24.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;0-升级python2-6&quot;&gt;&lt;a href=&quot;#0-升级python2-6&quot; class=&quot;headerlink&quot; title=&quot;0 升级python2.6&quot;&gt;&lt;/a&gt;0 升级python2.6&lt;/h1&gt;&lt;p&gt;系统默认安装的Python是2.6.6的，我们需要升级到Python2.7，用wget命令从官方下载源文件，然后解压进行编译&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;wget https://www.python.org/ftp/python/2.7.12/Python-2.7.12.tgz&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tar xvf Python-2.7.12.tgz&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cd Python-2.7.12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;make &amp;amp;&amp;amp; make install&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mv /usr/bin/python /usr/bin/python2.6.6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ln -s /usr/local/bin/python2.7 /usr/bin/python&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后编辑/usr/bin/yum，将第一行的#!/usr/bin/python修改成#!/usr/bin/python2.6.6&lt;br&gt;现在执行yum命令已经不会出现之前的错误信息了。&lt;/p&gt;
&lt;h1 id=&quot;1-安装pip&quot;&gt;&lt;a href=&quot;#1-安装pip&quot; class=&quot;headerlink&quot; title=&quot;1 安装pip&quot;&gt;&lt;/a&gt;1 安装pip&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;wget https://bootstrap.pypa.io/get-pip.py&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;python get-pip.py&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;whereis pip&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ln -s /usr/local/bin/pip2.7 /usr/bin/pip&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;2-安装依赖的lib&quot;&gt;&lt;a href=&quot;#2-安装依赖的lib&quot; class=&quot;headerlink&quot; title=&quot;2 安装依赖的lib&quot;&gt;&lt;/a&gt;2 安装依赖的lib&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo yum -y install epel-release&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo yum -y install gcc gcc-c++ python-pip python-devel atlas atlas-devel gcc-gfortran openssl-devel libffi-devel&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pip install --upgrade numpy scipy wheel cryptography&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于CentOS6的系统安装了epel-release-latest-7.noarch.rpm 导致在使用yum命令时出现Error: xz compression not available问题。&lt;br&gt;解决方法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1.到http://ftp.riken.jp/Linux/fedora/epel/下载epel-release-latest-6.noarch.rpm&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2.卸载epel-release-latest-7.noarch.rpm：yum remove epel-release&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3.清空epel目录：rm -rf/var/cache/yum/x86_64/6/epel/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4.安装epel6:rpm -ivhepel-release-latest-6.noarch.rpm&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;3-安装tensorflow&quot;&gt;&lt;a href=&quot;#3-安装tensorflow&quot; class=&quot;headerlink&quot; title=&quot;3 安装tensorflow&quot;&gt;&lt;/a&gt;3 安装tensorflow&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.12.0rc0-cp27-none-linux_x86_64.whl&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;4-test&quot;&gt;&lt;a href=&quot;#4-test&quot; class=&quot;headerlink&quot; title=&quot;4 test&quot;&gt;&lt;/a&gt;4 test&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ImportError: /lib64/libc.so.6: version `GLIBC_2.16&amp;apos; not found (required by /usr/local/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow.so)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Error importing tensorflow.  Unless you are using bazel,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;you should not try to import tensorflow from its source directory;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;please exit the tensorflow source tree, and relaunch your python interpreter&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;from there.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## 解决方法&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;下载新版本glibc安装&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0-升级python2-6&quot;&gt;&lt;a href=&quot;#0-升级python2-6&quot; class=&quot;headerlink&quot; title=&quot;0 升级python2.6&quot;&gt;&lt;/a&gt;0 升级python2.6&lt;/h1&gt;&lt;p&gt;系统默认安装的Python是2.6.6的，我们需要升
    
    </summary>
    
      <category term="深度学习" scheme="http://www.linzhe.me/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="tensoflow" scheme="http://www.linzhe.me/tags/tensoflow/"/>
    
  </entry>
  
  <entry>
    <title>词向量应用</title>
    <link href="http://www.linzhe.me/2016/12/03/20161203-word2vec-usage-in-recommendation-system/"/>
    <id>http://www.linzhe.me/2016/12/03/20161203-word2vec-usage-in-recommendation-system/</id>
    <published>2016-12-03T09:07:49.000Z</published>
    <updated>2016-12-03T11:42:34.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;0-词向量&quot;&gt;&lt;a href=&quot;#0-词向量&quot; class=&quot;headerlink&quot; title=&quot;0 词向量&quot;&gt;&lt;/a&gt;0 词向量&lt;/h1&gt;&lt;p&gt;自然语言理解的问题要转化为机器学习的问题，第一步就是要找一种方法把这些符号数学化。&lt;br&gt;最直观最常用的词表示方法是 One-hot Representation，这种方法把每个词表示为一个很长的向量。这个向量的维度是词表大小，其中绝大多数元素为 0，只有一个维度的值为 1，这个维度就代表了当前的词。&lt;/p&gt;
&lt;p&gt;“话筒”表示为 [0 0 0 &lt;strong&gt;1&lt;/strong&gt; 0 0 0 0 0 0 0 0 0 0 0 0 …]&lt;br&gt;“麦克”表示为 [0 0 0 0 0 0 0 0 &lt;strong&gt;1&lt;/strong&gt; 0 0 0 0 0 0 0 …]&lt;/p&gt;
&lt;p&gt;这种表示方法存在一个重要的问题就是“词汇鸿沟”现象：任意两个词之间都是孤立的。光从这两个向量中看不出两个词是否有关系，哪怕是话筒和麦克这样的同义词也不能幸免于难。&lt;br&gt;于是，为了处理这个问题，Hinton早在1986年就提出了Distributed Representation 的表示方式。向量一般长成这个样子：[0.792, −0.177, −0.107, 0.109, −0.542, …]。维度以 50 维和 100 维比较常见。&lt;/p&gt;
&lt;h1 id=&quot;1-词向量的训练&quot;&gt;&lt;a href=&quot;#1-词向量的训练&quot; class=&quot;headerlink&quot; title=&quot;1 词向量的训练&quot;&gt;&lt;/a&gt;1 词向量的训练&lt;/h1&gt;&lt;p&gt;一个词要表示成上述一个向量是要经过一番训练的，训练方法较多，word2vec是其中一种。word2vec是google开源的做词嵌入（word embedding）的开源工具。&lt;br&gt;简单的说，它在给定的语料库上训练一个模型，然后会输出所有出现在语料库上的单词的向量表示，这个向量称为”word embedding”。&lt;br&gt;基于这个向量表示，可以计算词与词之间的关系，例如相似性(同义词等)，语义关联性（中国 - 北京 = 英国 - 伦敦），还可以进行词的聚类等。&lt;/p&gt;
&lt;h2 id=&quot;1-1-word2vec使用&quot;&gt;&lt;a href=&quot;#1-1-word2vec使用&quot; class=&quot;headerlink&quot; title=&quot;1.1 word2vec使用&quot;&gt;&lt;/a&gt;1.1 word2vec使用&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://code.google.com/archive/p/word2vec/source/default/source&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载源码&lt;/a&gt;&lt;br&gt;make编译后可以得到几个可执行文件，运行demo-word.sh，下载demo数据并进行训练。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;./word2vec -train text8 -output vectors.bin -cbow 1 -size 200 -window 8 -negative 25 -hs 0 -sample 1e-4 -threads 20 -binary 1 -iter 15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;生成结果文件vectors.bin 中，运行&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;./distance vectors.bin&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输入词，返回相似的词以及相似度。&lt;/p&gt;
&lt;h1 id=&quot;3-词向量的应用&quot;&gt;&lt;a href=&quot;#3-词向量的应用&quot; class=&quot;headerlink&quot; title=&quot;3 词向量的应用&quot;&gt;&lt;/a&gt;3 词向量的应用&lt;/h1&gt;&lt;p&gt;词向量的表示，可以类比到工业应用上许多场景，可以很好的解决相似度、聚类等相关问题。&lt;/p&gt;
&lt;h2 id=&quot;3-1-社交网络推荐&quot;&gt;&lt;a href=&quot;#3-1-社交网络推荐&quot; class=&quot;headerlink&quot; title=&quot;3.1 社交网络推荐&quot;&gt;&lt;/a&gt;3.1 社交网络推荐&lt;/h2&gt;&lt;p&gt;word2vec中两个词的相似度可以直接通过余弦等相似度算法来衡量，可以将doc和word定义为&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;doc  -&amp;gt; 根据每一个用户关注用户的顺序，生成doc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;word -&amp;gt; 被关注的用户&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于用户量很大，可以适当的清洗掉一些将关注数比较少的或者太多的doc。&lt;/p&gt;
&lt;h2 id=&quot;3-2-计算item的相似度&quot;&gt;&lt;a href=&quot;#3-2-计算item的相似度&quot; class=&quot;headerlink&quot; title=&quot;3.2 计算item的相似度&quot;&gt;&lt;/a&gt;3.2 计算item的相似度&lt;/h2&gt;&lt;p&gt;在App推荐的场景中，根据浏览/收藏/下载/安装等行为，可以将app看做词，将每一个用户看做一个文档，通过word2vec将其训练为一个向量。&lt;br&gt;视频推荐场景下同样可行。同样的，可以推广到计算广告中，根据用户的点击广告的点击序列，将每一个广告变为一个向量。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0-词向量&quot;&gt;&lt;a href=&quot;#0-词向量&quot; class=&quot;headerlink&quot; title=&quot;0 词向量&quot;&gt;&lt;/a&gt;0 词向量&lt;/h1&gt;&lt;p&gt;自然语言理解的问题要转化为机器学习的问题，第一步就是要找一种方法把这些符号数学化。&lt;br&gt;最直观最常用的词表示方法是
    
    </summary>
    
      <category term="机器学习" scheme="http://www.linzhe.me/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="word2vec" scheme="http://www.linzhe.me/tags/word2vec/"/>
    
  </entry>
  
  <entry>
    <title>使用mxnet进行kaggle竞赛digit recognizer</title>
    <link href="http://www.linzhe.me/2016/11/26/20161126-mxnet-for-kaggle-digit-recognizer/"/>
    <id>http://www.linzhe.me/2016/11/26/20161126-mxnet-for-kaggle-digit-recognizer/</id>
    <published>2016-11-26T13:38:48.000Z</published>
    <updated>2016-12-03T09:15:27.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;0-编译mxnet&quot;&gt;&lt;a href=&quot;#0-编译mxnet&quot; class=&quot;headerlink&quot; title=&quot;0. 编译mxnet&quot;&gt;&lt;/a&gt;0. 编译mxnet&lt;/h1&gt;&lt;p&gt;上一篇讲了如何编译caffe，mxnet与caffe的依赖包大体相同，只需要将mxnet依赖有源码从github上全clone下来进行编译即可。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git clone --recursive https://github.com/dmlc/mxnet&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cd mxnet; cp make/osx.mk ./config.mk; make -j&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;1-应用&quot;&gt;&lt;a href=&quot;#1-应用&quot; class=&quot;headerlink&quot; title=&quot;1. 应用&quot;&gt;&lt;/a&gt;1. 应用&lt;/h1&gt;&lt;p&gt;使用mxnet的python api，快速开发一个应用算法。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; pd&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; mxnet &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; mx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; logging&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;VALIDATION_SIZE = &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dataset = pd.read_csv(&lt;span class=&quot;string&quot;&gt;&quot;../input/train.csv&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;target = dataset[[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]].values.ravel()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;train = dataset.iloc[:,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:].values&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_lenet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    data = mx.symbol.Variable(&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# first conv&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    conv1 = mx.symbol.Convolution(data=data, kernel=(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;), num_filter=&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    tanh1 = mx.symbol.Activation(data=conv1, act_type=&lt;span class=&quot;string&quot;&gt;&quot;tanh&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pool1 = mx.symbol.Pooling(data=tanh1, pool_type=&lt;span class=&quot;string&quot;&gt;&quot;max&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                              kernel=(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;), stride=(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# second conv&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    conv2 = mx.symbol.Convolution(data=pool1, kernel=(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;), num_filter=&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    tanh2 = mx.symbol.Activation(data=conv2, act_type=&lt;span class=&quot;string&quot;&gt;&quot;tanh&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pool2 = mx.symbol.Pooling(data=tanh2, pool_type=&lt;span class=&quot;string&quot;&gt;&quot;max&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                              kernel=(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;), stride=(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# first fullc&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    flatten = mx.symbol.Flatten(data=pool2)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    fc1 = mx.symbol.FullyConnected(data=flatten, num_hidden=&lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    tanh3 = mx.symbol.Activation(data=fc1, act_type=&lt;span class=&quot;string&quot;&gt;&quot;tanh&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# second fullc&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    fc2 = mx.symbol.FullyConnected(data=tanh3, num_hidden=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# loss&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    lenet = mx.symbol.SoftmaxOutput(data=fc2, name=&lt;span class=&quot;string&quot;&gt;&#39;softmax&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; lenet&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;val_data = train[:VALIDATION_SIZE].astype(&lt;span class=&quot;string&quot;&gt;&#39;float32&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;val_label = target[:VALIDATION_SIZE]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;train_data = train[VALIDATION_SIZE: , :].astype(&lt;span class=&quot;string&quot;&gt;&#39;float32&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;train_label = target[VALIDATION_SIZE:]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;train_data = np.array(train_data).reshape((&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;val_data = np.array(val_data).reshape((&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;train_data[:] /= &lt;span class=&quot;number&quot;&gt;256.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;val_data[:]/= &lt;span class=&quot;number&quot;&gt;256.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;batch_size = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;train_iter = mx.io.NDArrayIter(train_data, train_label, batch_size=batch_size, shuffle=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;val_iter = mx.io.NDArrayIter(val_data, val_label, batch_size=batch_size)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# logging&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;head = &lt;span class=&quot;string&quot;&gt;&#39;%(asctime)-15s Node[0] %(message)s&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;logging.basicConfig(level=logging.DEBUG, format=head)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# create model&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;devs = mx.gpu(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;network=get_lenet()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;model = mx.model.FeedForward(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#ctx                = devs,&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        symbol             = network,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        num_epoch          = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        learning_rate      = &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        momentum           = &lt;span class=&quot;number&quot;&gt;0.9&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        wd                 = &lt;span class=&quot;number&quot;&gt;0.00001&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        initializer        = mx.init.Xavier(factor_type=&lt;span class=&quot;string&quot;&gt;&quot;in&quot;&lt;/span&gt;, magnitude=&lt;span class=&quot;number&quot;&gt;2.34&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;eval_metrics = [&lt;span class=&quot;string&quot;&gt;&#39;accuracy&#39;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;model.fit(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	X=train_iter,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	eval_metric        = eval_metrics,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	eval_data	 = val_iter&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#predict&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;test = pd.read_csv(&lt;span class=&quot;string&quot;&gt;&quot;../input/test.csv&quot;&lt;/span&gt;).values&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;test_data = test.astype(&lt;span class=&quot;string&quot;&gt;&#39;float32&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;test_data = np.array(test_data).reshape((&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;test_data[:]/= &lt;span class=&quot;number&quot;&gt;256.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;test_iter = mx.io.NDArrayIter(test_data, batch_size=batch_size)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pred = model.predict(X = test_iter)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pred = np.argsort(pred)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;np.savetxt(&lt;span class=&quot;string&quot;&gt;&#39;submission_lenet.csv&#39;&lt;/span&gt;, np.c_[range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,len(test)+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),pred[:,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;]], delimiter=&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;, header = &lt;span class=&quot;string&quot;&gt;&#39;ImageId,Label&#39;&lt;/span&gt;, comments = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, fmt=&lt;span class=&quot;string&quot;&gt;&#39;%d&#39;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;结果&quot;&gt;&lt;a href=&quot;#结果&quot; class=&quot;headerlink&quot; title=&quot;结果&quot;&gt;&lt;/a&gt;结果&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;2016-11-26 21:19:07,577 Node[0] Start training with [cpu(0)]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2016-11-26 21:21:21,802 Node[0] Epoch[0] Resetting Data Iterator&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2016-11-26 21:21:21,802 Node[0] Epoch[0] Time cost=134.220&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2016-11-26 21:21:24,613 Node[0] Epoch[0] Validation-accuracy=0.974000&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2016-11-26 21:23:36,314 Node[0] Epoch[1] Resetting Data Iterator&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2016-11-26 21:23:36,314 Node[0] Epoch[1] Time cost=131.700&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2016-11-26 21:23:38,900 Node[0] Epoch[1] Validation-accuracy=0.988000&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2016-11-26 21:25:48,668 Node[0] Epoch[2] Resetting Data Iterator&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2016-11-26 21:25:48,669 Node[0] Epoch[2] Time cost=129.769&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2016-11-26 21:25:51,246 Node[0] Epoch[2] Validation-accuracy=0.987500&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2016-11-26 21:28:01,337 Node[0] Epoch[3] Resetting Data Iterator&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2016-11-26 21:28:01,337 Node[0] Epoch[3] Time cost=130.091&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2016-11-26 21:28:03,945 Node[0] Epoch[3] Validation-accuracy=0.988000&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;提交的准确率为0.98571&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0-编译mxnet&quot;&gt;&lt;a href=&quot;#0-编译mxnet&quot; class=&quot;headerlink&quot; title=&quot;0. 编译mxnet&quot;&gt;&lt;/a&gt;0. 编译mxnet&lt;/h1&gt;&lt;p&gt;上一篇讲了如何编译caffe，mxnet与caffe的依赖包大体相同，只需要将m
    
    </summary>
    
      <category term="深度学习" scheme="http://www.linzhe.me/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="深度学习" scheme="http://www.linzhe.me/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="mxnet" scheme="http://www.linzhe.me/tags/mxnet/"/>
    
  </entry>
  
  <entry>
    <title>mac安装caffe过程</title>
    <link href="http://www.linzhe.me/2016/11/26/20161126-install-caffe-on-mac/"/>
    <id>http://www.linzhe.me/2016/11/26/20161126-install-caffe-on-mac/</id>
    <published>2016-11-26T05:51:29.000Z</published>
    <updated>2016-11-26T09:28:06.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;0-关于Caffe&quot;&gt;&lt;a href=&quot;#0-关于Caffe&quot; class=&quot;headerlink&quot; title=&quot;0. 关于Caffe&quot;&gt;&lt;/a&gt;0. 关于Caffe&lt;/h1&gt;&lt;p&gt;昨天看到amazon将mxnet做的其深度深度算法的消息，突然觉得应该开始学习一些深度学习的知识了。&lt;br&gt;本来想试试mxnet的，但是觉得还是先从caffe开始吧。caffe是深度学习在图像领域广泛使用的框架，有很多现在的model可以直接使用。&lt;/p&gt;
&lt;h1 id=&quot;1-安装依赖&quot;&gt;&lt;a href=&quot;#1-安装依赖&quot; class=&quot;headerlink&quot; title=&quot;1. 安装依赖&quot;&gt;&lt;/a&gt;1. 安装依赖&lt;/h1&gt;&lt;p&gt;使用brew安装依赖，首先更新一下brew，不然可能出现意想不到的各种错误。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后安装依赖&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew install -vd snappy leveldb gflags glog szip lmdb&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;brew tap homebrew/science&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;brew install hdf5 opencv protobuf boost&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;2-编译&quot;&gt;&lt;a href=&quot;#2-编译&quot; class=&quot;headerlink&quot; title=&quot;2. 编译&quot;&gt;&lt;/a&gt;2. 编译&lt;/h1&gt;&lt;p&gt;下载caffe源码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git clone https://github.com/bvlc/caffe.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cd caffe&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cp Makefile.config.example Makefile.config&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改编译模式开关&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;CPU_ONLY := 1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编译&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;make -j&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;编译完成，可以开始动手运行例子了！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0-关于Caffe&quot;&gt;&lt;a href=&quot;#0-关于Caffe&quot; class=&quot;headerlink&quot; title=&quot;0. 关于Caffe&quot;&gt;&lt;/a&gt;0. 关于Caffe&lt;/h1&gt;&lt;p&gt;昨天看到amazon将mxnet做的其深度深度算法的消息，突然觉得应该开始学习一
    
    </summary>
    
      <category term="深度学习" scheme="http://www.linzhe.me/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="caffe" scheme="http://www.linzhe.me/tags/caffe/"/>
    
      <category term="深度学习" scheme="http://www.linzhe.me/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习基础系列：Logistic Regression</title>
    <link href="http://www.linzhe.me/2016/11/05/20161105-logistic-regression/"/>
    <id>http://www.linzhe.me/2016/11/05/20161105-logistic-regression/</id>
    <published>2016-11-04T23:57:49.000Z</published>
    <updated>2016-11-26T09:28:42.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;0-介绍&quot;&gt;&lt;a href=&quot;#0-介绍&quot; class=&quot;headerlink&quot; title=&quot;0. 介绍&quot;&gt;&lt;/a&gt;0. 介绍&lt;/h2&gt;&lt;p&gt;因为其实现简单分类时计算量非常小，速度很快，存储资源低而被广泛的应用在诸如广告、推荐系统中，可以说逻辑回归是应用最广泛的分类算法之一，原因大概有以下几个方面：&lt;br&gt;— LR模型原理简单，易于实现并且效果还不错。&lt;br&gt;— 大量互联网公司中的广告和推荐系统大量使用了CTR预估模型，而LR则是CTR的基本算法。&lt;/p&gt;
&lt;h2 id=&quot;1-线性二分类问题&quot;&gt;&lt;a href=&quot;#1-线性二分类问题&quot; class=&quot;headerlink&quot; title=&quot;1. 线性二分类问题&quot;&gt;&lt;/a&gt;1. 线性二分类问题&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0-介绍&quot;&gt;&lt;a href=&quot;#0-介绍&quot; class=&quot;headerlink&quot; title=&quot;0. 介绍&quot;&gt;&lt;/a&gt;0. 介绍&lt;/h2&gt;&lt;p&gt;因为其实现简单分类时计算量非常小，速度很快，存储资源低而被广泛的应用在诸如广告、推荐系统中，可以说逻辑回归是应用最广泛的
    
    </summary>
    
      <category term="机器学习" scheme="http://www.linzhe.me/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://www.linzhe.me/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Spark MLlib 正则化</title>
    <link href="http://www.linzhe.me/2016/08/05/20160816-spark-mllib-regularizer/"/>
    <id>http://www.linzhe.me/2016/08/05/20160816-spark-mllib-regularizer/</id>
    <published>2016-08-05T15:21:01.000Z</published>
    <updated>2016-08-06T16:09:03.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;4-1-正则化&quot;&gt;&lt;a href=&quot;#4-1-正则化&quot; class=&quot;headerlink&quot; title=&quot;4.1 正则化&quot;&gt;&lt;/a&gt;4.1 正则化&lt;/h1&gt;&lt;p&gt;正则化是为了约束训练过程，使其向生成简单模型的方向收敛，从而避免过拟合。MLlib目前支持下面的正则化方法：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;范数&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;L1&lt;/td&gt;
&lt;td&gt;促进产生稀疏的权值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;L2&lt;/td&gt;
&lt;td&gt;平滑&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;MLlib正则化抽象类&quot;&gt;&lt;a href=&quot;#MLlib正则化抽象类&quot; class=&quot;headerlink&quot; title=&quot;MLlib正则化抽象类&quot;&gt;&lt;/a&gt;MLlib正则化抽象类&lt;/h3&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Updater&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Serializable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   * Compute an updated value for weights given the gradient, stepSize, iteration number and&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   * regularization parameter. Also returns the regularization value regParam * R(w)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   * computed using the *updated* weights.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   *&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   * @param weightsOld - Column matrix of size dx1 where d is the number of features.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   * @param gradient - Column matrix of size dx1 where d is the number of features.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   * @param stepSize - step size across iterations&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   * @param iter - Iteration number&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   * @param regParam - Regularization parameter&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   *&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   * @return A tuple of 2 elements. The first element is a column matrix containing updated weights,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   *         and the second element is the regularization value computed using updated weights.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;compute&lt;/span&gt;&lt;/span&gt;(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      weightsOld: &lt;span class=&quot;type&quot;&gt;Vector&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      gradient: &lt;span class=&quot;type&quot;&gt;Vector&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      stepSize: &lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      iter: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      regParam: &lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt;): (&lt;span class=&quot;type&quot;&gt;Vector&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;L1范式&quot;&gt;&lt;a href=&quot;#L1范式&quot; class=&quot;headerlink&quot; title=&quot;L1范式&quot;&gt;&lt;/a&gt;L1范式&lt;/h3&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@DeveloperApi&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;L1Updater&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Updater&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;compute&lt;/span&gt;&lt;/span&gt;(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      weightsOld: &lt;span class=&quot;type&quot;&gt;Vector&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      gradient: &lt;span class=&quot;type&quot;&gt;Vector&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      stepSize: &lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      iter: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      regParam: &lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt;): (&lt;span class=&quot;type&quot;&gt;Vector&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt;) = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; thisIterStepSize = stepSize / math.sqrt(iter)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Take gradient step&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; brzWeights: &lt;span class=&quot;type&quot;&gt;BV&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt;] = weightsOld.asBreeze.toDenseVector&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    brzAxpy(-thisIterStepSize, gradient.asBreeze, brzWeights)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Apply proximal operator (soft thresholding)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; shrinkageVal = regParam * thisIterStepSize&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; len = brzWeights.length&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (i &amp;lt; len) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; wi = brzWeights(i)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      brzWeights(i) = signum(wi) * max(&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, abs(wi) - shrinkageVal)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    (&lt;span class=&quot;type&quot;&gt;Vectors&lt;/span&gt;.fromBreeze(brzWeights), brzNorm(brzWeights, &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;) * regParam)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;L2范式&quot;&gt;&lt;a href=&quot;#L2范式&quot; class=&quot;headerlink&quot; title=&quot;L2范式&quot;&gt;&lt;/a&gt;L2范式&lt;/h3&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@DeveloperApi&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SquaredL2Updater&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Updater&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;compute&lt;/span&gt;&lt;/span&gt;(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      weightsOld: &lt;span class=&quot;type&quot;&gt;Vector&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      gradient: &lt;span class=&quot;type&quot;&gt;Vector&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      stepSize: &lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      iter: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      regParam: &lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt;): (&lt;span class=&quot;type&quot;&gt;Vector&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt;) = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// add up both updates from the gradient of the loss (= step) as well as&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// the gradient of the regularizer (= regParam * weightsOld)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// w&#39; = w - thisIterStepSize * (gradient + regParam * w)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// w&#39; = (1 - thisIterStepSize * regParam) * w - thisIterStepSize * gradient&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; thisIterStepSize = stepSize / math.sqrt(iter)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; brzWeights: &lt;span class=&quot;type&quot;&gt;BV&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;Double&lt;/span&gt;] = weightsOld.asBreeze.toDenseVector&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    brzWeights :*= (&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; - thisIterStepSize * regParam)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    brzAxpy(-thisIterStepSize, gradient.asBreeze, brzWeights)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; norm = brzNorm(brzWeights, &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    (&lt;span class=&quot;type&quot;&gt;Vectors&lt;/span&gt;.fromBreeze(brzWeights), &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt; * regParam * norm * norm)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;4-1-正则化&quot;&gt;&lt;a href=&quot;#4-1-正则化&quot; class=&quot;headerlink&quot; title=&quot;4.1 正则化&quot;&gt;&lt;/a&gt;4.1 正则化&lt;/h1&gt;&lt;p&gt;正则化是为了约束训练过程，使其向生成简单模型的方向收敛，从而避免过拟合。MLlib目前支持下面的正则
    
    </summary>
    
      <category term="Spark" scheme="http://www.linzhe.me/categories/Spark/"/>
    
    
      <category term="Spark" scheme="http://www.linzhe.me/tags/Spark/"/>
    
      <category term="Spark MLlib" scheme="http://www.linzhe.me/tags/Spark-MLlib/"/>
    
  </entry>
  
  <entry>
    <title>spark RDD 操作</title>
    <link href="http://www.linzhe.me/2016/08/04/20160804-spark-rdd/"/>
    <id>http://www.linzhe.me/2016/08/04/20160804-spark-rdd/</id>
    <published>2016-08-04T12:06:29.000Z</published>
    <updated>2016-08-05T15:09:25.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;2-1-Spark-RDD操作&quot;&gt;&lt;a href=&quot;#2-1-Spark-RDD操作&quot; class=&quot;headerlink&quot; title=&quot;2.1 Spark RDD操作&quot;&gt;&lt;/a&gt;2.1 Spark RDD操作&lt;/h1&gt;&lt;h2 id=&quot;2-1-1-RDD是什么？&quot;&gt;&lt;a href=&quot;#2-1-1-RDD是什么？&quot; class=&quot;headerlink&quot; title=&quot;2.1.1 RDD是什么？&quot;&gt;&lt;/a&gt;2.1.1 RDD是什么？&lt;/h2&gt;&lt;p&gt;弹性分布式数据集RDD是Spark中的抽象数据结构类型，任何数据在Spark中都被表示为RDD。&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RDD&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;T&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;ClassTag&lt;/span&gt;](&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    @transient private var _sc: &lt;span class=&quot;type&quot;&gt;SparkContext&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    @transient private var deps: &lt;span class=&quot;type&quot;&gt;Seq&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;Dependency&lt;/span&gt;[_]]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  ) &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Serializable&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Logging&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;RDD还提供了一组丰富的操作来操作这些数据。在这些操作中，诸如map、flatMap、filter等转换操作实现了monad模式，很好地契合了Scala的集合操作。除此之外，RDD还提供了诸如join、groupBy、reduceByKey等更为方便的操作（注意，reduceByKey是action，而非transformation），以支持常见的数据运算。RDD可以简单看成是一个数组。和普通数组的区别是，RDD中的数据是分区存储的，这样不同分区的数据就可以分布在不同的机器上，同时可以被并行处理。因此，Spark应用程序所做的就是把需要处理的数据转换为RDD，然后对RDD进行一系列的变换和操作从而得到结果。RDD的接口只支持粗粒度的操作，一个操作会被应用到RDD上所有的数据上。&lt;/p&gt;
&lt;h2 id=&quot;2-1-2-RDD基本转换操作&quot;&gt;&lt;a href=&quot;#2-1-2-RDD基本转换操作&quot; class=&quot;headerlink&quot; title=&quot;2.1.2 RDD基本转换操作&quot;&gt;&lt;/a&gt;2.1.2 RDD基本转换操作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;map操作将RDD中类型为T的元素一对一的映射为类型为U的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;map&lt;/span&gt;&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;U&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;ClassTag&lt;/span&gt;](f: &lt;span class=&quot;type&quot;&gt;T&lt;/span&gt; =&amp;gt; &lt;span class=&quot;type&quot;&gt;U&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;RDD&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;U&lt;/span&gt;] = withScope &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; cleanF = sc.clean(f)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MapPartitionsRDD&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;U&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;T&lt;/span&gt;](&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, (context, pid, iter) =&amp;gt; iter.map(cleanF))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;举例&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;scala&amp;gt; var rdd = sc.makeRDD(1 to 5, 1)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;rdd: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[1] at makeRDD at &amp;lt;console&amp;gt;:21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;scala&amp;gt; rdd.collect()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;res2: Array[Int] = Array(1, 2, 3, 4, 5)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;scala&amp;gt; val mapRDD = rdd.map(x =&amp;gt; x.toFloat)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mapRDD: org.apache.spark.rdd.RDD[Float] = MapPartitionsRDD[2] at map at &amp;lt;console&amp;gt;:23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;scala&amp;gt; mapRDD.collect()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;res3: Array[Float] = Array(1.0, 2.0, 3.0, 4.0, 5.0)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;distinct操作返回RDD中所有不一样的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;distinct&lt;/span&gt;&lt;/span&gt;(numPartitions: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;)(&lt;span class=&quot;keyword&quot;&gt;implicit&lt;/span&gt; ord: &lt;span class=&quot;type&quot;&gt;Ordering&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;T&lt;/span&gt;] = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;RDD&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;T&lt;/span&gt;] = withScope &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  map(x =&amp;gt; (x, &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;)).reduceByKey((x, y) =&amp;gt; x, numPartitions).map(_._1)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;flatMap操作将RDD中每一个元素进行一对多转换&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;flatMap&lt;/span&gt;&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;U&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;ClassTag&lt;/span&gt;](f: &lt;span class=&quot;type&quot;&gt;T&lt;/span&gt; =&amp;gt; &lt;span class=&quot;type&quot;&gt;TraversableOnce&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;U&lt;/span&gt;]): &lt;span class=&quot;type&quot;&gt;RDD&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;U&lt;/span&gt;] = withScope &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; cleanF = sc.clean(f)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MapPartitionsRDD&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;U&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;T&lt;/span&gt;](&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, (context, pid, iter) =&amp;gt; iter.flatMap(cleanF))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  举例&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;scala&amp;gt; val flatMapRDD = rdd.flatMap(x =&amp;gt; 1 to x)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;flatMapRDD: org.apache.spark.rdd.RDD[Int] = MapPartitionsRDD[3] at flatMap at &amp;lt;console&amp;gt;:23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;scala&amp;gt; flatMapRDD.collect()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;res4: Array[Int] = Array(1, 1, 2, 1, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4, 5)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;filter操作对RDD中的元素进行过滤&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;filter&lt;/span&gt;&lt;/span&gt;(f: &lt;span class=&quot;type&quot;&gt;T&lt;/span&gt; =&amp;gt; &lt;span class=&quot;type&quot;&gt;Boolean&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;RDD&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;T&lt;/span&gt;] = withScope &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; cleanF = sc.clean(f)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MapPartitionsRDD&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;T&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;T&lt;/span&gt;](&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    (context, pid, iter) =&amp;gt; iter.filter(cleanF),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    preservesPartitioning = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-1-3-键值RDD转换操作&quot;&gt;&lt;a href=&quot;#2-1-3-键值RDD转换操作&quot; class=&quot;headerlink&quot; title=&quot;2.1.3 键值RDD转换操作&quot;&gt;&lt;/a&gt;2.1.3 键值RDD转换操作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;combineByKey、foldByKey、reduceByKey、groupByKey这四种操作类型，都是针对RDD[K, V]进行，最终会归结为combineByKey的操作上。&lt;br&gt;combineByKey的内部实现分成三部分来完成：&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先，根据是否需要在map端进行combine操作决定是否对RDD进行一次mapPartitions操作，从而减少shuffle的数据量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第2步根据partitioner函数对MapPartitionsRDD进行shuffle操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后对suffle的结果进行combine操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;join、leftOuterJoin、rightOuterJoin针对RDD[K, V]中K值相等的连接操作，最终归结为cogroup来实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cogroup&lt;/span&gt;&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;W&lt;/span&gt;](other: &lt;span class=&quot;type&quot;&gt;RDD&lt;/span&gt;[(&lt;span class=&quot;type&quot;&gt;K&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;W&lt;/span&gt;)], partitioner: &lt;span class=&quot;type&quot;&gt;Partitioner&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    : &lt;span class=&quot;type&quot;&gt;RDD&lt;/span&gt;[(&lt;span class=&quot;type&quot;&gt;K&lt;/span&gt;, (&lt;span class=&quot;type&quot;&gt;Iterable&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;V&lt;/span&gt;], &lt;span class=&quot;type&quot;&gt;Iterable&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;W&lt;/span&gt;]))] = self.withScope &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (partitioner.isInstanceOf[&lt;span class=&quot;type&quot;&gt;HashPartitioner&lt;/span&gt;] &amp;amp;&amp;amp; keyClass.isArray) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;SparkException&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Default partitioner cannot partition array keys.&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; cg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;CoGroupedRDD&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;K&lt;/span&gt;](&lt;span class=&quot;type&quot;&gt;Seq&lt;/span&gt;(self, other), partitioner)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  cg.mapValues &amp;#123; &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;(vs, w1s) =&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    (vs.asInstanceOf[&lt;span class=&quot;type&quot;&gt;Iterable&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;V&lt;/span&gt;]], w1s.asInstanceOf[&lt;span class=&quot;type&quot;&gt;Iterable&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;W&lt;/span&gt;]])&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一个join操作会产生CoGroupRDD、MapValuesRDD、FlatMapValuesRDD三个RDD。&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;join&lt;/span&gt;&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;W&lt;/span&gt;](other: &lt;span class=&quot;type&quot;&gt;RDD&lt;/span&gt;[(&lt;span class=&quot;type&quot;&gt;K&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;W&lt;/span&gt;)], partitioner: &lt;span class=&quot;type&quot;&gt;Partitioner&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;RDD&lt;/span&gt;[(&lt;span class=&quot;type&quot;&gt;K&lt;/span&gt;, (&lt;span class=&quot;type&quot;&gt;V&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;W&lt;/span&gt;))] = self.withScope &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.cogroup(other, partitioner).flatMapValues( pair =&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (v &amp;lt;- pair._1.iterator; w &amp;lt;- pair._2.iterator) &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; (v, w)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-1-4-RDD依赖关系&quot;&gt;&lt;a href=&quot;#2-1-4-RDD依赖关系&quot; class=&quot;headerlink&quot; title=&quot;2.1.4 RDD依赖关系&quot;&gt;&lt;/a&gt;2.1.4 RDD依赖关系&lt;/h2&gt;&lt;p&gt;因为RDD操作是粗粒度的，每一个转换操作都会产生一个新有RDD，所以前后的RDD就会形成前后依赖关系。Spark中有两种依赖类型，窄依赖（Narrow Dependenceis）和宽依赖（Wide Dependencies）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;窄依赖，每一个父RDD的分区最多只被子RDD的一个分区所依赖，map、filter、union操作就会形成一个窄依赖&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;宽依赖，多个子RDD的分区会依赖于同一个父RDD的分区。两个RDD数据集之间进行join操作就会形成宽依赖。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-1-5-使用Spark实现PageRank算法&quot;&gt;&lt;a href=&quot;#2-1-5-使用Spark实现PageRank算法&quot; class=&quot;headerlink&quot; title=&quot;2.1.5 使用Spark实现PageRank算法&quot;&gt;&lt;/a&gt;2.1.5 使用Spark实现PageRank算法&lt;/h2&gt;&lt;p&gt;PageRank，网页排名，又称网页级别、Google左侧排名或佩奇排名，是一种由搜索引擎根据网页之间相互的超链接计算的技术，而作为网页排名的要素之一，以Google公司创办人拉里·佩奇（Larry Page）之姓来命名。Google用它来体现网页的相关性和重要性，在搜索引擎优化操作中是经常被用来评估网页优化的成效因素之一。&lt;/p&gt;
&lt;p&gt;PageRank通过网络浩瀚的超链接关系来确定一个页面的等级。Google把从A页面到B页面的链接解释为A页面给B页面投票，Google根据投票来源（甚至来源的来源，即链接到A页面的页面）和投票目标的等级来决定新的等级。简单的说，一个高等级的页面可以使其他低等级页面的等级提升。[来源&lt;a href=&quot;https://zh.wikipedia.org/wiki/PageRank&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;维基百科&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;其算法原理如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过链接关系将网页构建成Web图，每个页面设置相同的PageRank值，初始一般为1。&lt;/li&gt;
&lt;li&gt;将每一个网页的权重贡献发送给相邻的网页，权重贡献=权重/指向的URL个数&lt;/li&gt;
&lt;li&gt;对天每一个网页，将收到的权重贡献相加记为contribs，重新计算权重rank=0.15 + contribs*0.85&lt;/li&gt;
&lt;li&gt;迭代1、2、3，直到收敛。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;利用Spark的各种操作方法，可以方便的实现PageRank算法，实现如下：&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MAX_ITERATION&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; links = sc.parallelize(&lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;((&#39;&lt;span class=&quot;type&quot;&gt;A&lt;/span&gt;&#39;, &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;(&#39;&lt;span class=&quot;type&quot;&gt;D&lt;/span&gt;&#39;)), (&#39;&lt;span class=&quot;type&quot;&gt;B&lt;/span&gt;&#39;, &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;(&#39;&lt;span class=&quot;type&quot;&gt;A&lt;/span&gt;&#39;)), (&#39;&lt;span class=&quot;type&quot;&gt;C&lt;/span&gt;&#39;, &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;(&#39;&lt;span class=&quot;type&quot;&gt;A&lt;/span&gt;&#39;, &#39;&lt;span class=&quot;type&quot;&gt;B&lt;/span&gt;&#39;)), (&#39;&lt;span class=&quot;type&quot;&gt;D&lt;/span&gt;&#39;, &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;(&#39;&lt;span class=&quot;type&quot;&gt;A&lt;/span&gt;&#39;, &#39;&lt;span class=&quot;type&quot;&gt;C&lt;/span&gt;&#39;))), &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;).map(x =&amp;gt; (x._1,x._2)).cache()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ranks = sc.parallelize(&lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;((&#39;&lt;span class=&quot;type&quot;&gt;A&lt;/span&gt;&#39;, &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;), (&#39;&lt;span class=&quot;type&quot;&gt;B&lt;/span&gt;&#39;, &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;), (&#39;&lt;span class=&quot;type&quot;&gt;C&lt;/span&gt;&#39;, &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;), (&#39;&lt;span class=&quot;type&quot;&gt;D&lt;/span&gt;&#39;, &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;)), &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i &amp;lt;- &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; to &lt;span class=&quot;type&quot;&gt;MAX_ITERATION&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; contribs = links.join(ranks, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;).flatMap &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; (url, (links, rank)) =&amp;gt; links.map(dest =&amp;gt; (dest, rank/links.size))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  ranks = contribs.reduceByKey(_ + _, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;).mapValues(&lt;span class=&quot;number&quot;&gt;0.15&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;0.85&lt;/span&gt; * _)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ranks.collect()&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最终结果：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;res15: Array[(Char, Double)] = Array((B,0.4613200524321036), (D,1.3705281840649928), (A,1.4357617405523626), (C,0.7323900229505396))&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2-1-Spark-RDD操作&quot;&gt;&lt;a href=&quot;#2-1-Spark-RDD操作&quot; class=&quot;headerlink&quot; title=&quot;2.1 Spark RDD操作&quot;&gt;&lt;/a&gt;2.1 Spark RDD操作&lt;/h1&gt;&lt;h2 id=&quot;2-1-1-RDD是什么？
    
    </summary>
    
      <category term="Spark" scheme="http://www.linzhe.me/categories/Spark/"/>
    
    
      <category term="Spark" scheme="http://www.linzhe.me/tags/Spark/"/>
    
  </entry>
  
  <entry>
    <title>system log extract from chromium code</title>
    <link href="http://www.linzhe.me/2016/07/15/20160715-system-log-extract-from-chromium-code/"/>
    <id>http://www.linzhe.me/2016/07/15/20160715-system-log-extract-from-chromium-code/</id>
    <published>2016-07-15T08:33:10.000Z</published>
    <updated>2016-08-05T14:19:37.000Z</updated>
    
    <content type="html">&lt;p&gt;glog是Google的一个应用程序的日志库。它提供基于C++风格的流的日志API，以及各种辅助的宏。打印日志只需以流的形式传给 LOG(level) ，例如：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;VLOG(INFO) &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;File Path: &quot;&lt;/span&gt; &amp;lt;&amp;lt; file_path;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;glog是Google的一个应用程序的日志库。它提供基于C++风格的流的日志API，以及各种辅助的宏。打印日志只需以流的形式传给 LOG(level) ，例如：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>cache server： 冷热数据切换</title>
    <link href="http://www.linzhe.me/2016/07/14/20160714-cache-server-start-up/"/>
    <id>http://www.linzhe.me/2016/07/14/20160714-cache-server-start-up/</id>
    <published>2016-07-14T11:43:00.000Z</published>
    <updated>2016-08-05T14:19:37.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;leveldb是一个Google开发的高性能的字符串类型的K-V存储C/C++类库，其详细介绍可参考&lt;a href=&quot;https://github.com/google/leveldb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github主页&lt;/a&gt;，刚开始工作时使用过一段时间，用于存储爬虫系统爬取的大量网页数据。但是后来就一直没有使用过。&lt;br&gt;最近在做推荐时，发现user profile的数据实在太大，即使有类似于Redis集群1T的内存也没法将用户所有有数据cache下来，一直想着能不能做个冷热的备件系统加大对user profile数据存储数量，结合leveldb和redis。&lt;/p&gt;
&lt;h3 id=&quot;leveldb的优势&quot;&gt;&lt;a href=&quot;#leveldb的优势&quot; class=&quot;headerlink&quot; title=&quot;leveldb的优势&quot;&gt;&lt;/a&gt;leveldb的优势&lt;/h3&gt;&lt;p&gt;LevelDB内部采用连续的块存储数据，充分发挥了顺序磁盘I/O的性能，并且运用了现代操作系统里的高性能缓冲区管理。这样的结构正好迎合了现代内存的层次式结构， 避免了与产生高性能的操作系统决策之间的冲突。&lt;/p&gt;
&lt;h3 id=&quot;redis&quot;&gt;&lt;a href=&quot;#redis&quot; class=&quot;headerlink&quot; title=&quot;redis&quot;&gt;&lt;/a&gt;redis&lt;/h3&gt;&lt;p&gt;Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。&lt;br&gt;Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。&lt;br&gt;从3.0版本开始，Redis支持数据的备份，即master-slave模式的数据备份。&lt;/p&gt;
&lt;h3 id=&quot;冷热数据&quot;&gt;&lt;a href=&quot;#冷热数据&quot; class=&quot;headerlink&quot; title=&quot;冷热数据&quot;&gt;&lt;/a&gt;冷热数据&lt;/h3&gt;&lt;p&gt;因为redis强劲的性能，与leveldb互相配合，将冷热数据分开存储，互相交换数据，以达到冷热切换的目的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;leveldb是一个Google开发的高性能的字符串类型的K-V存储C/C++类库，其详细介绍可参考&lt;a href=&quot;https://git
    
    </summary>
    
      <category term="cache_server" scheme="http://www.linzhe.me/categories/cache-server/"/>
    
    
      <category term="leveldb" scheme="http://www.linzhe.me/tags/leveldb/"/>
    
      <category term="redis" scheme="http://www.linzhe.me/tags/redis/"/>
    
      <category term="cache_server" scheme="http://www.linzhe.me/tags/cache-server/"/>
    
  </entry>
  
  <entry>
    <title>微信推荐系统</title>
    <link href="http://www.linzhe.me/2016/07/10/20160710-build-recommendtion-system/"/>
    <id>http://www.linzhe.me/2016/07/10/20160710-build-recommendtion-system/</id>
    <published>2016-07-10T02:31:00.000Z</published>
    <updated>2016-08-05T14:19:37.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;爬虫&quot;&gt;&lt;a href=&quot;#爬虫&quot; class=&quot;headerlink&quot; title=&quot;爬虫&quot;&gt;&lt;/a&gt;爬虫&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;正文抽取&lt;/li&gt;
&lt;li&gt;主题抽取&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;推荐引擎&quot;&gt;&lt;a href=&quot;#推荐引擎&quot; class=&quot;headerlink&quot; title=&quot;推荐引擎&quot;&gt;&lt;/a&gt;推荐引擎&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;tag rank&lt;/li&gt;
&lt;li&gt;协同过滤&lt;/li&gt;
&lt;li&gt;user profile&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;客户端&quot;&gt;&lt;a href=&quot;#客户端&quot; class=&quot;headerlink&quot; title=&quot;客户端&quot;&gt;&lt;/a&gt;客户端&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;iOS&lt;/li&gt;
&lt;li&gt;Android&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;爬虫&quot;&gt;&lt;a href=&quot;#爬虫&quot; class=&quot;headerlink&quot; title=&quot;爬虫&quot;&gt;&lt;/a&gt;爬虫&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;正文抽取&lt;/li&gt;
&lt;li&gt;主题抽取&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;推荐引擎&quot;&gt;&lt;a href=&quot;#推荐引擎&quot; clas
    
    </summary>
    
      <category term="github" scheme="http://www.linzhe.me/categories/github/"/>
    
    
      <category term="推荐系统" scheme="http://www.linzhe.me/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Setting up a Github Pages blog with Hexo</title>
    <link href="http://www.linzhe.me/2016/07/10/20160710-Setting-up-a-Github-Pages-blog-with-Hexo/"/>
    <id>http://www.linzhe.me/2016/07/10/20160710-Setting-up-a-Github-Pages-blog-with-Hexo/</id>
    <published>2016-07-09T16:14:33.000Z</published>
    <updated>2016-08-05T14:19:37.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;安装-Node-js&quot;&gt;&lt;a href=&quot;#安装-Node-js&quot; class=&quot;headerlink&quot; title=&quot;安装 Node.js&quot;&gt;&lt;/a&gt;安装 Node.js&lt;/h3&gt;&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;从&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js下载地址&lt;/a&gt;下载相应的包进行安装&lt;/li&gt;
&lt;li&gt;在安装好Node.js，会默认安装好npm&lt;/li&gt;
&lt;li&gt;使用npm安装Hexo&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install -g hexo&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;使用Hexo&quot;&gt;&lt;a href=&quot;#使用Hexo&quot; class=&quot;headerlink&quot; title=&quot;使用Hexo&quot;&gt;&lt;/a&gt;使用Hexo&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;创建文件目录&quot;&gt;&lt;a href=&quot;#创建文件目录&quot; class=&quot;headerlink&quot; title=&quot;创建文件目录&quot;&gt;&lt;/a&gt;创建文件目录&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo init username.github.io&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ cd username.github.io&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;修改相关的配置，使用github部署&quot;&gt;&lt;a href=&quot;#修改相关的配置，使用github部署&quot; class=&quot;headerlink&quot; title=&quot;修改相关的配置，使用github部署&quot;&gt;&lt;/a&gt;修改相关的配置，使用github部署&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;vi _config.yml&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在Deployment的配置中添加&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;deploy:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  repo: https://github.com/username/username.github.io&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  type: git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;本地测试&quot;&gt;&lt;a href=&quot;#本地测试&quot; class=&quot;headerlink&quot; title=&quot;本地测试&quot;&gt;&lt;/a&gt;本地测试&lt;/h3&gt;&lt;p&gt;使用Hexo命令&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;启动本地测试服务，访问&lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000&lt;/a&gt;，可以看到默认的主题与blog文章。&lt;/p&gt;
&lt;h3 id=&quot;更多Hexo命令&quot;&gt;&lt;a href=&quot;#更多Hexo命令&quot; class=&quot;headerlink&quot; title=&quot;更多Hexo命令&quot;&gt;&lt;/a&gt;更多Hexo命令&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo deploy # 部署到github&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo generate # 生成静态文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo clean    # 清除生成的静态文件&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;更多主题&quot;&gt;&lt;a href=&quot;#更多主题&quot; class=&quot;headerlink&quot; title=&quot;更多主题&quot;&gt;&lt;/a&gt;更多主题&lt;/h3&gt;&lt;p&gt;默认的主题可以在&lt;a href=&quot;http://www.hexo.io/theme&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo.io&lt;/a&gt;中获取，方法很简单，只要将主题的代码chechout到theme目录下，然后修改_config.yml文件中的theme的值，重启测试服务就可以，十分方便。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装-Node-js&quot;&gt;&lt;a href=&quot;#安装-Node-js&quot; class=&quot;headerlink&quot; title=&quot;安装 Node.js&quot;&gt;&lt;/a&gt;安装 Node.js&lt;/h3&gt;&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;从&lt;a href=&quot;https://nodejs.or
    
    </summary>
    
      <category term="github" scheme="http://www.linzhe.me/categories/github/"/>
    
    
      <category term="Markdown" scheme="http://www.linzhe.me/tags/Markdown/"/>
    
      <category term="github" scheme="http://www.linzhe.me/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Markdown Cheatsheet</title>
    <link href="http://www.linzhe.me/2016/07/09/20160709-markdown-cheatsheet/"/>
    <id>http://www.linzhe.me/2016/07/09/20160709-markdown-cheatsheet/</id>
    <published>2016-07-09T15:48:25.000Z</published>
    <updated>2016-08-05T14:19:37.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a&gt;二级标题&lt;/h2&gt;&lt;h3 id=&quot;三级标题&quot;&gt;&lt;a href=&quot;#三级标题&quot; class=&quot;headerlink&quot; title=&quot;三级标题&quot;&gt;&lt;/a&gt;三级标题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;列表1&lt;/li&gt;
&lt;li&gt;列表2&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;序列表1&lt;/li&gt;
&lt;li&gt;序列表2&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://baidu.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/bmiddle/aa397b7fjw1dzplsgpdw5j.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;引用&lt;br&gt;示例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;斜体&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;粗体&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tables&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Are&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;cool&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;right-aligned&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a
    
    </summary>
    
      <category term="Note" scheme="http://www.linzhe.me/categories/Note/"/>
    
    
      <category term="Markdown" scheme="http://www.linzhe.me/tags/Markdown/"/>
    
  </entry>
  
</feed>
